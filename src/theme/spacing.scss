$sizeUnit: rem;
$separator: '-';

$spacers: (
  ('has-margin', 'margin'),
  ('has-padding', 'padding')
);

$sizes: (
  ('none', 0),
  ('xxs', 0.125),
  ('xs', 0.25),
  ('sm', 0.5),
  ('md', 1),
  ('lg', 2),
  ('xl', 4),
  ('xxl', 8),
);

$positions: (
  'top',
  'right',
  'bottom',
  'left'
);

$axes: (
  ('x', ('left', 'right')),
  ('y', ('top', 'bottom'))
);

@function sizeValue($key, $value) {
  @return if($key == 'none', 0, $value + $sizeUnit);
}

@each $size in $sizes {
  $sizeKey: nth($size, 1);
  $sizeValue: nth($size, 2);

  @each $spacer in $spacers {
    $spacerKey: nth($spacer, 1);
    $spacerProperty: nth($spacer, 2);

    .#{$spacerKey}#{$separator}#{$sizeKey} {
      #{$spacerProperty}: sizeValue($sizeKey, $sizeValue);
    }

    @each $position in $positions {
      .#{$spacerKey}#{$separator}#{$position}#{$separator}#{$sizeKey} {
        #{$spacerProperty}-#{$position}: sizeValue($sizeKey, $sizeValue);
      }
    }

    @each $axis in $axes {
      $positions: nth($axis, 2);
      $axis: nth($axis, 1);

      @each $position in $positions {
        .#{$spacerKey}#{$separator}#{$axis}#{$separator}#{$sizeKey} {
          #{$spacerProperty}-#{$position}: sizeValue($sizeKey, $sizeValue);
        }
      }
    }
  }
}
